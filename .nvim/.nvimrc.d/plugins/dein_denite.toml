[[plugins]]
repo = 'Shougo/neomru.vim'
depends = ['denite.vim']

[[plugins]]
repo = 'Shougo/neoyank.vim'
depends = ['denite.vim']

[[plugins]]
repo =  'sgur/unite-qf'
depends = ['denite.vim']

[[plugins]]
repo = 'kopischke/unite-spell-suggest'
depends = ['denite.vim']

[[plugins]]
repo = 'kmnk/vim-unite-giti'
depends = ['denite.vim']

[[plugins]]
repo = 'tsukkee/unite-tag.git'
depends = ['denite.vim']

[[plugins]]
repo = 'ujihisa/unite-colorscheme'
depends = ['denite.vim']

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
    nnoremap [unite] <Nop>
    nmap <Space>u [unite]

    noremap <silent> [unite]q :<C-u>Denite -no-quit qf<CR>
    noremap <silent> [unite]f :<C-u>DeniteBufferDir -buffer-name=files file_rec<CR>
    noremap <silent> [unite]a :<C-u>DeniteBufferDir -buffer-name=files file_mru file<CR>
    noremap <silent> [unite]b :<C-u>Denite -buffer-name=buffer buffer<CR>
    noremap <silent> [unite]o :<C-u>Denite outline -no-quit<CR>
    noremap <silent> [unite]t :<C-u>Denite -buffer-name=tabs tab<CR>
    noremap <silent> [unite]r :<C-u>Denite -buffer-name=registers register<CR>
    noremap <silent> [unite]m :<C-u>Denite -no-quit build<CR>
    noremap <silent> [unite]z :<C-u>Denite spell_suggest<CR>

    let g:neomru#time_format = "(%Y/%m/%d %H:%M:%S) "

    call denite#custom#map('insert', '<C-P>', '<denite:move_to_previous_line>')
    call denite#custom#map('insert', '<C-N>', '<denite:move_to_next_line>')
    call denite#custom#map('normal', '<C-P>', '<denite:move_to_previous_line>')
    call denite#custom#map('normal', '<C-N>', '<denite:move_to_next_line>')

    call denite#custom#map('insert', '<C-J>', '<denite:assign_next_text>')
    call denite#custom#map('insert', '<C-K>', '<denite:assign_previous_text>')

    call denite#custom#map('insert', '<C-S>', '<denite:do_action:split>')
    call denite#custom#map('insert', '<C-V>', '<denite:do_action:vsplit>')
    call denite#custom#map('insert', '<C-T>', '<denite:do_action:tabopen>')

    call denite#custom#source('file_rec', 'matchers', ['matcher_fuzzy', 'matcher_project_files', 'matcher_ignore_globs'])

    call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
        \ [ '.git/', '.ropeproject/', '__pycache__/', 'venv/', 'images/', '*.min.*', 'img/', 'fonts/',
        \   '.idea/', '.ipynb_checkpoints/'])

'''

